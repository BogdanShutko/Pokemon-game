{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const slice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoading: false,\n    data: {},\n    reducers: {\n      fetchUser: () => ({\n        isLoading: true\n      }),\n      updateUser: (state, action) => ({\n        isLoading: false,\n        data: action.payload\n      }),\n      removeUser: () => ({\n        isLoading: false,\n        data: {}\n      })\n    }\n  }\n});\nexport const {\n  fetchUser,\n  updateUser,\n  removeUser\n} = slice.actions;\nexport const selectUserLoading = state => state.user.isLoading;\nexport const selectUser = state => state.user.data;\nexport const getUserAsync = () => async dispatch => {\n  const idToken = localStorage.getItem(\"idToken\");\n\n  if (idToken) {\n    dispatch(fetchUser());\n    const requestOptions = {\n      method: \"POST\",\n      body: JSON.stringify({\n        idToken\n      })\n    };\n    const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBYS5eAvMigqgwYdAL_bG_yu4FLz7_2MbQ\", requestOptions).then(res => res.json());\n    console.log(\"#####, response\", response);\n\n    if (response.hasOwnProperty(\"error\")) {\n      dispatch(removeUser());\n      localStorage.removeItem(\"idToken\");\n    }\n  } else {\n    dispatch(removeUser());\n  }\n};\nexport default slice.reducer;","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/store/users.js"],"names":["createSlice","slice","name","initialState","isLoading","data","reducers","fetchUser","updateUser","state","action","payload","removeUser","actions","selectUserLoading","user","selectUser","getUserAsync","dispatch","idToken","localStorage","getItem","requestOptions","method","body","JSON","stringify","response","fetch","then","res","json","console","log","hasOwnProperty","removeItem","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,MADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,KADC;AAEZC,IAAAA,IAAI,EAAE,EAFM;AAGZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,OAAO;AAChBH,QAAAA,SAAS,EAAE;AADK,OAAP,CADH;AAIRI,MAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,MAAoB;AAC9BN,QAAAA,SAAS,EAAE,KADmB;AAE9BC,QAAAA,IAAI,EAAEK,MAAM,CAACC;AAFiB,OAApB,CAJJ;AAQRC,MAAAA,UAAU,EAAE,OAAO;AACjBR,QAAAA,SAAS,EAAE,KADM;AAEjBC,QAAAA,IAAI,EAAE;AAFW,OAAP;AARJ;AAHE;AAFiB,CAAD,CAAzB;AAqBP,OAAO,MAAM;AAAEE,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBI,EAAAA;AAAzB,IAAwCX,KAAK,CAACY,OAApD;AAEP,OAAO,MAAMC,iBAAiB,GAAIL,KAAD,IAAWA,KAAK,CAACM,IAAN,CAAWX,SAAhD;AACP,OAAO,MAAMY,UAAU,GAAIP,KAAD,IAAWA,KAAK,CAACM,IAAN,CAAWV,IAAzC;AAEP,OAAO,MAAMY,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpD,QAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;;AACA,MAAIF,OAAJ,EAAa;AACXD,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACA,UAAMe,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,QAAAA;AADmB,OAAf;AAFe,KAAvB;AAMA,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uGAD0B,EAE1BN,cAF0B,CAAL,CAGrBO,IAHqB,CAGfC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHO,CAAvB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,QAA/B;;AACA,QAAIA,QAAQ,CAACO,cAAT,CAAwB,OAAxB,CAAJ,EAAsC;AACpChB,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAQ,MAAAA,YAAY,CAACe,UAAb,CAAwB,SAAxB;AACD;AACF,GAjBD,MAiBO;AACLjB,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACD;AACF,CAtBM;AAwBP,eAAeX,KAAK,CAACmC,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    isLoading: false,\r\n    data: {},\r\n    reducers: {\r\n      fetchUser: () => ({\r\n        isLoading: true,\r\n      }),\r\n      updateUser: (state, action) => ({\r\n        isLoading: false,\r\n        data: action.payload,\r\n      }),\r\n      removeUser: () => ({\r\n        isLoading: false,\r\n        data: {},\r\n      }),\r\n    },\r\n  },\r\n});\r\n\r\nexport const { fetchUser, updateUser, removeUser } = slice.actions;\r\n\r\nexport const selectUserLoading = (state) => state.user.isLoading;\r\nexport const selectUser = (state) => state.user.data;\r\n\r\nexport const getUserAsync = () => async (dispatch) => {\r\n  const idToken = localStorage.getItem(\"idToken\");\r\n  if (idToken) {\r\n    dispatch(fetchUser());\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        idToken,\r\n      }),\r\n    };\r\n    const response = await fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBYS5eAvMigqgwYdAL_bG_yu4FLz7_2MbQ\",\r\n      requestOptions\r\n    ).then((res) => res.json());\r\n    console.log(\"#####, response\", response);\r\n    if (response.hasOwnProperty(\"error\")) {\r\n      dispatch(removeUser());\r\n      localStorage.removeItem(\"idToken\");\r\n    }\r\n  } else {\r\n    dispatch(removeUser());\r\n  }\r\n};\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}