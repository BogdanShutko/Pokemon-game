{"ast":null,"code":"var _jsxFileName = \"C:\\\\ZarMarathon\\\\pokemon-game\\\\src\\\\routes\\\\Game\\\\routes\\\\finish\\\\Finish.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\nimport { FireBaseContext } from \"./../../../../components/context/firebaseContext\";\nimport s from \"./style.module.css\";\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\nimport { useHistory } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { clearState, secondPlayerPokemons, winner } from \"../../../../store/pokemons\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FinishPage = () => {\n  _s();\n\n  const secondPlayer = useSelector(secondPlayerPokemons);\n  const secondPlayer2 = [...secondPlayer];\n  const winnerPlayer = useSelector(winner);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [player2, setPlayer2] = useState(secondPlayer2);\n  console.log(\"player2: #####\", player2);\n  console.log(Object.isExtensible(player2));\n\n  const pickCard = key => {\n    setPlayer2(prevState => {\n      return prevState.reduce((acc, item) => {\n        const newItem = { ...item,\n          isSelected: false\n        };\n\n        if (newItem.id === key) {\n          setSelectedCard(item);\n          newItem.isSelected = true;\n        }\n\n        acc.push(newItem);\n        return acc;\n      }, []);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flex,\n      children: Object.values(pokemons).map(card => {\n        return /*#__PURE__*/_jsxDEV(PokemonCard, { ...card,\n          isActive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(s.flex, s.button),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: winnerPlayer === 1 && selectedCard === null,\n        onClick: () => {\n          if (selectedCard !== null) {\n            delete selectedCard.isSelected;\n            database.addPokemon(selectedCard);\n          }\n\n          dispatch(clearState());\n          history.push(\"/game\");\n        },\n        children: [\" \", \"PLAY AGAIN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flex,\n      children: secondPlayer.map((card, index) => {\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          handlerSelect: () => {\n            if (winnerPlayer === 1) {\n              pickCard(card.id);\n            }\n          },\n          id: card.id,\n          name: card.name,\n          type: card.type,\n          img: card.img,\n          values: card.values,\n          possession: \"red\",\n          isSelected: card.isSelected,\n          isActive: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FinishPage, \"r9yp7IZ0hYq703CmfAFP5vH3kks=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = FinishPage;\nexport default FinishPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishPage\");","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/routes/Game/routes/finish/Finish.js"],"names":["useContext","PokemonContext","FireBaseContext","s","PokemonCard","useHistory","cn","useState","useSelector","clearState","secondPlayerPokemons","winner","useDispatch","FinishPage","secondPlayer","secondPlayer2","winnerPlayer","dispatch","history","selectedCard","setSelectedCard","player2","setPlayer2","console","log","Object","isExtensible","pickCard","key","prevState","reduce","acc","item","newItem","isSelected","id","push","flex","values","pokemons","map","card","button","database","addPokemon","index","name","type","img"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\r\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\r\nimport { FireBaseContext } from \"./../../../../components/context/firebaseContext\";\r\nimport s from \"./style.module.css\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  clearState,\r\n  secondPlayerPokemons,\r\n  winner,\r\n} from \"../../../../store/pokemons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst FinishPage = () => {\r\n  const secondPlayer = useSelector(secondPlayerPokemons);\r\n  const secondPlayer2 = [...secondPlayer];\r\n  const winnerPlayer = useSelector(winner);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [player2, setPlayer2] = useState(secondPlayer2);\r\n  console.log(\"player2: #####\", player2);\r\n  console.log(Object.isExtensible(player2));\r\n\r\n  const pickCard = (key) => {\r\n    setPlayer2((prevState) => {\r\n      return prevState.reduce((acc, item) => {\r\n        const newItem = { ...item, isSelected: false };\r\n        if (newItem.id === key) {\r\n          setSelectedCard(item);\r\n          newItem.isSelected = true;\r\n        }\r\n        acc.push(newItem);\r\n        return acc;\r\n      }, []);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.flex}>\r\n        {Object.values(pokemons).map((card) => {\r\n          return <PokemonCard {...card} isActive={true}></PokemonCard>;\r\n        })}\r\n      </div>\r\n      <div className={cn(s.flex, s.button)}>\r\n        <button\r\n          disabled={winnerPlayer === 1 && selectedCard === null}\r\n          onClick={() => {\r\n            if (selectedCard !== null) {\r\n              delete selectedCard.isSelected;\r\n              database.addPokemon(selectedCard);\r\n            }\r\n            dispatch(clearState());\r\n            history.push(\"/game\");\r\n          }}\r\n        >\r\n          {\" \"}\r\n          PLAY AGAIN\r\n        </button>\r\n      </div>\r\n      <div className={s.flex}>\r\n        {secondPlayer.map((card, index) => {\r\n          return (\r\n            <PokemonCard\r\n              handlerSelect={() => {\r\n                if (winnerPlayer === 1) {\r\n                  pickCard(card.id);\r\n                }\r\n              }}\r\n              key={index}\r\n              id={card.id}\r\n              name={card.name}\r\n              type={card.type}\r\n              img={card.img}\r\n              values={card.values}\r\n              possession=\"red\"\r\n              isSelected={card.isSelected}\r\n              isActive\r\n            ></PokemonCard>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishPage;\r\n"]},"metadata":{},"sourceType":"module"}