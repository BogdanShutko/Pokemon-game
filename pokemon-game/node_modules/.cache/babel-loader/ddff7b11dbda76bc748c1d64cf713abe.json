{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const slice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoading: true,\n    data: {}\n  },\n  reducers: {\n    fetchUser: () => ({\n      isLoading: true\n    }),\n    //initial state, loading true\n    updateUser: (state, action) => ({ ...state,\n      isLoading: false,\n      data: action.payload\n    }),\n    //getting user\n    removeUser: () => ({\n      // ...state,\n      isLoading: false,\n      data: {}\n    })\n  }\n});\nexport const {\n  fetchUser,\n  updateUser,\n  removeUser\n} = slice.actions;\nexport const getUserUpdateAsync = () => async dispatch => {\n  const idToken = localStorage.getItem(\"idToken\");\n\n  if (idToken) {\n    const requestOptions = {\n      method: \"POST\",\n      body: JSON.stringify({\n        idToken\n      })\n    };\n    const responce = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBYS5eAvMigqgwYdAL_bG_yu4FLz7_2MbQ\", requestOptions).then(res => res.json());\n    console.log(responce);\n\n    if (responce.hasOwnProperty(\"error\")) {\n      localStorage.removeItem(\"idToken\");\n      dispatch(removeUser());\n    } else {\n      dispatch(updateUser(responce.users[0]));\n    }\n  } else {\n    dispatch(removeUser());\n  }\n};\nexport const getUserAsync = () => async dispatch => {\n  dispatch(fetchUser());\n  dispatch(getUserUpdateAsync());\n};\nexport default slice.reducer;","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/store/users.js"],"names":["createSlice","slice","name","initialState","isLoading","data","reducers","fetchUser","updateUser","state","action","payload","removeUser","actions","getUserUpdateAsync","dispatch","idToken","localStorage","getItem","requestOptions","method","body","JSON","stringify","responce","fetch","then","res","json","console","log","hasOwnProperty","removeItem","users","getUserAsync","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,MADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,IADC;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAFiB;AAM/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,OAAO;AAChBH,MAAAA,SAAS,EAAE;AADK,KAAP,CADH;AAGJ;AACJI,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,MAAoB,EAC9B,GAAGD,KAD2B;AAE9BL,MAAAA,SAAS,EAAE,KAFmB;AAG9BC,MAAAA,IAAI,EAAEK,MAAM,CAACC;AAHiB,KAApB,CAJJ;AAQJ;AACJC,IAAAA,UAAU,EAAE,OAAO;AACjB;AACAR,MAAAA,SAAS,EAAE,KAFM;AAGjBC,MAAAA,IAAI,EAAE;AAHW,KAAP;AATJ;AANqB,CAAD,CAAzB;AAsBP,OAAO,MAAM;AAAEE,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBI,EAAAA;AAAzB,IAAwCX,KAAK,CAACY,OAApD;AACP,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;;AAEA,MAAIF,OAAJ,EAAa;AACX,UAAMG,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,QAAAA;AADmB,OAAf;AAFe,KAAvB;AAMA,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uGAD0B,EAE1BN,cAF0B,CAAL,CAGrBO,IAHqB,CAGfC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHO,CAAvB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,QAAIA,QAAQ,CAACO,cAAT,CAAwB,OAAxB,CAAJ,EAAsC;AACpCd,MAAAA,YAAY,CAACe,UAAb,CAAwB,SAAxB;AACAjB,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,KAHD,MAGO;AACLG,MAAAA,QAAQ,CAACP,UAAU,CAACgB,QAAQ,CAACS,KAAT,CAAe,CAAf,CAAD,CAAX,CAAR;AACD;AACF,GAlBD,MAkBO;AACLlB,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD;AACF,CAxBM;AAyBP,OAAO,MAAMsB,YAAY,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AACAQ,EAAAA,QAAQ,CAACD,kBAAkB,EAAnB,CAAR;AACD,CAHM;AAKP,eAAeb,KAAK,CAACkC,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nexport const slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    isLoading: true,\r\n    data: {},\r\n  },\r\n  reducers: {\r\n    fetchUser: () => ({\r\n      isLoading: true,\r\n    }), //initial state, loading true\r\n    updateUser: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.payload,\r\n    }), //getting user\r\n    removeUser: () => ({\r\n      // ...state,\r\n      isLoading: false,\r\n      data: {},\r\n    }),\r\n  },\r\n});\r\nexport const { fetchUser, updateUser, removeUser } = slice.actions;\r\nexport const getUserUpdateAsync = () => async (dispatch) => {\r\n  const idToken = localStorage.getItem(\"idToken\");\r\n\r\n  if (idToken) {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        idToken,\r\n      }),\r\n    };\r\n    const responce = await fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBYS5eAvMigqgwYdAL_bG_yu4FLz7_2MbQ\",\r\n      requestOptions\r\n    ).then((res) => res.json());\r\n    console.log(responce);\r\n    if (responce.hasOwnProperty(\"error\")) {\r\n      localStorage.removeItem(\"idToken\");\r\n      dispatch(removeUser());\r\n    } else {\r\n      dispatch(updateUser(responce.users[0]));\r\n    }\r\n  } else {\r\n    dispatch(removeUser());\r\n  }\r\n};\r\nexport const getUserAsync = () => async (dispatch) => {\r\n  dispatch(fetchUser());\r\n  dispatch(getUserUpdateAsync());\r\n};\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}