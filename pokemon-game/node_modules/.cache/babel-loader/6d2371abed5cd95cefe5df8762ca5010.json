{"ast":null,"code":"var _jsxFileName = \"C:\\\\ZarMarathon\\\\pokemon-game\\\\src\\\\routes\\\\Game\\\\routes\\\\UserPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport s from \"./style.module.css\";\nimport PokemonCard from \"../../components/pokemonCard\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPokemonsAsync, selectPokemonsData } from \"../../store/pokemons\";\nimport { fetchUser, removeUser, selectUserData } from \"../../store/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPage = () => {\n  _s();\n\n  const pokemonsRedux = useSelector(selectPokemonsData);\n  const userData = useSelector(selectUserData);\n  const [pokemons, setPokemons] = useState({});\n  const dispatch = useDispatch();\n\n  const toLocalTime = date => new Date(parseInt(date, 10)).toLocaleString(\"uk-UA\");\n\n  useEffect(() => {\n    dispatch(getPokemonsAsync()); //send pokes to redux\n  }, []); // [empty] - gets pokemons data once and sets render\n\n  useEffect(() => {\n    setPokemons(pokemonsRedux);\n  }, [pokemonsRedux]); //set Pokemons on change of pokemonsRedux\n\n  const onClickLogOut = evt => {\n    evt.preventDefault();\n    localStorage.removeItem(\"idToken\");\n    dispatch(fetchUser());\n    dispatch(removeUser());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.page,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Account:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.stats,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Name: \", userData.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created: \", toLocalTime(userData.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last visit: \", toLocalTime(userData.lastLoginAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickLogOut,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: s.promt,\n      children: \"Your cards:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flex,\n      children: Object.entries(pokemons).map(([key, {\n        name,\n        img,\n        id,\n        type,\n        values\n      }]) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        className: s.card,\n        objID: key,\n        name: name,\n        img: img,\n        id: id,\n        type: type,\n        values: values,\n        isActive: true\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPage, \"juw0fXwyzvHeuEVWzLJPtI10+GM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/routes/Game/routes/UserPage/index.js"],"names":["s","PokemonCard","useState","useEffect","useDispatch","useSelector","getPokemonsAsync","selectPokemonsData","fetchUser","removeUser","selectUserData","UserPage","pokemonsRedux","userData","pokemons","setPokemons","dispatch","toLocalTime","date","Date","parseInt","toLocaleString","onClickLogOut","evt","preventDefault","localStorage","removeItem","page","stats","email","createdAt","lastLoginAt","promt","flex","Object","entries","map","key","name","img","id","type","values","card"],"mappings":"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","sourcesContent":["import s from \"./style.module.css\";\r\nimport PokemonCard from \"../../components/pokemonCard\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPokemonsAsync, selectPokemonsData } from \"../../store/pokemons\";\r\nimport { fetchUser, removeUser, selectUserData } from \"../../store/user\";\r\n\r\nconst UserPage = () => {\r\n  const pokemonsRedux = useSelector(selectPokemonsData);\r\n  const userData = useSelector(selectUserData);\r\n  const [pokemons, setPokemons] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const toLocalTime = (date) =>\r\n    new Date(parseInt(date, 10)).toLocaleString(\"uk-UA\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokemonsAsync()); //send pokes to redux\r\n  }, []); // [empty] - gets pokemons data once and sets render\r\n  useEffect(() => {\r\n    setPokemons(pokemonsRedux);\r\n  }, [pokemonsRedux]); //set Pokemons on change of pokemonsRedux\r\n\r\n  const onClickLogOut = (evt) => {\r\n    evt.preventDefault();\r\n    localStorage.removeItem(\"idToken\");\r\n    dispatch(fetchUser());\r\n    dispatch(removeUser());\r\n  };\r\n\r\n  return (\r\n    <div className={s.page}>\r\n      <h1>Your Account:</h1>\r\n      <div className={s.stats}>\r\n        <p> Name: {userData.email} </p>\r\n        <p>Created: {toLocalTime(userData.createdAt)}</p>\r\n        <p>Last visit: {toLocalTime(userData.lastLoginAt)}</p>\r\n        <button onClick={onClickLogOut}>Log Out</button>\r\n      </div>\r\n      <p className={s.promt}>Your cards:</p>\r\n      <div className={s.flex}>\r\n        {Object.entries(pokemons).map(\r\n          ([key, { name, img, id, type, values }]) => (\r\n            <PokemonCard\r\n              className={s.card}\r\n              key={key}\r\n              objID={key}\r\n              name={name}\r\n              img={img}\r\n              id={id}\r\n              type={type}\r\n              values={values}\r\n              isActive={true}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}