{"ast":null,"code":"var _jsxFileName = \"C:\\\\ZarMarathon\\\\pokemon-game\\\\src\\\\routes\\\\Game\\\\routes\\\\board\\\\BoardPage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\nimport s from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardPage = () => {\n  _s();\n\n  const {\n    pokemons\n  } = useContext(PokemonContext);\n  const history = useHistory(); // if (Object.keys(pokemons).length === 0) {\n  //   history.replace(\"/game\");\n  // }\n\n  const [board, setBoard] = useState([]);\n  useEffect(async () => {\n    const boardResponse = await fetch(\"https://reactmarathon-api.netlify.app/api/board\");\n    const boardRequest = await boardResponse.json();\n    setBoard(boardRequest.data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.playerOne,\n      children: Object.values(pokemons).map(({\n        values,\n        name,\n        img,\n        id,\n        type\n      }) => {\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          className: s.card,\n          values: values,\n          name: name,\n          img: img,\n          id: id,\n          type: type,\n          minimize: true,\n          isActive: true\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.board,\n      children: board.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.boardPlate,\n          children: [\"(\", item.card && /*#__PURE__*/_jsxDEV(PokemonCard, { ...item,\n            minimize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 30\n          }, this), \")\"]\n        }, item.position, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BoardPage, \"7Ow5MkT3O7W/vNIicR+1EVW3nOc=\", false, function () {\n  return [useHistory];\n});\n\n_c = BoardPage;\nexport default BoardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/routes/Game/routes/board/BoardPage.js"],"names":["useContext","useEffect","useState","useHistory","PokemonContext","PokemonCard","s","BoardPage","pokemons","history","board","setBoard","boardResponse","fetch","boardRequest","json","data","root","playerOne","Object","values","map","name","img","id","type","card","item","boardPlate","position"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,+CAA/B;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,OAAOC,CAAP,MAAc,oBAAd;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACI,cAAD,CAA/B;AACA,QAAMK,OAAO,GAAGN,UAAU,EAA1B,CAFsB,CAGtB;AACA;AACA;;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMW,aAAa,GAAG,MAAMC,KAAK,CAC/B,iDAD+B,CAAjC;AAGA,UAAMC,YAAY,GAAG,MAAMF,aAAa,CAACG,IAAd,EAA3B;AACAJ,IAAAA,QAAQ,CAACG,YAAY,CAACE,IAAd,CAAR;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEV,CAAC,CAACW,IAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEX,CAAC,CAACY,SAAlB;AAAA,gBACGC,MAAM,CAACC,MAAP,CAAcZ,QAAd,EAAwBa,GAAxB,CAA4B,CAAC;AAAED,QAAAA,MAAF;AAAUE,QAAAA,IAAV;AAAgBC,QAAAA,GAAhB;AAAqBC,QAAAA,EAArB;AAAyBC,QAAAA;AAAzB,OAAD,KAAqC;AAChE,4BACE,QAAC,WAAD;AACE,UAAA,SAAS,EAAEnB,CAAC,CAACoB,IADf;AAGE,UAAA,MAAM,EAAEN,MAHV;AAIE,UAAA,IAAI,EAAEE,IAJR;AAKE,UAAA,GAAG,EAAEC,GALP;AAME,UAAA,EAAE,EAAEC,EANN;AAOE,UAAA,IAAI,EAAEC,IAPR;AAQE,UAAA,QAAQ,MARV;AASE,UAAA,QAAQ,EAAE;AATZ,WAEOD,EAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAdA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAK,MAAA,SAAS,EAAElB,CAAC,CAACI,KAAlB;AAAA,gBACGA,KAAK,CAACW,GAAN,CAAWM,IAAD,IAAU;AACnB,4BACE;AAAyB,UAAA,SAAS,EAAErB,CAAC,CAACsB,UAAtC;AAAA,0BACID,IAAI,CAACD,IAAL,iBAAa,QAAC,WAAD,OAAiBC,IAAjB;AAAuB,YAAA,QAAQ;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADjB;AAAA,WAAUA,IAAI,CAACE,QAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA9CD;;GAAMtB,S;UAEYJ,U;;;KAFZI,S;AAgDN,eAAeA,SAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport s from \"./style.module.css\";\r\n\r\nconst BoardPage = () => {\r\n  const { pokemons } = useContext(PokemonContext);\r\n  const history = useHistory();\r\n  // if (Object.keys(pokemons).length === 0) {\r\n  //   history.replace(\"/game\");\r\n  // }\r\n\r\n  const [board, setBoard] = useState([]);\r\n  useEffect(async () => {\r\n    const boardResponse = await fetch(\r\n      \"https://reactmarathon-api.netlify.app/api/board\"\r\n    );\r\n    const boardRequest = await boardResponse.json();\r\n    setBoard(boardRequest.data);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <div className={s.playerOne}>\r\n        {Object.values(pokemons).map(({ values, name, img, id, type }) => {\r\n          return (\r\n            <PokemonCard\r\n              className={s.card}\r\n              key={id}\r\n              values={values}\r\n              name={name}\r\n              img={img}\r\n              id={id}\r\n              type={type}\r\n              minimize\r\n              isActive={true}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={s.board}>\r\n        {board.map((item) => {\r\n          return (\r\n            <div key={item.position} className={s.boardPlate}>\r\n              ({item.card && <PokemonCard {...item} minimize />})\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardPage;\r\n"]},"metadata":{},"sourceType":"module"}