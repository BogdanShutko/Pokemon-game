{"ast":null,"code":"var _jsxFileName = \"C:\\\\ZarMarathon\\\\pokemon-game\\\\src\\\\routes\\\\Game\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router\";\nimport PokemonsJSON from \"../../data/Pokemons.json\";\nimport PokemonCard from \"../../components/PokemonCard/PokemonCard\";\nimport { useState, useEffect, useContext } from \"react\";\nimport s from \"./style.module.css\";\nimport database from \"../../service/firebase\";\nimport cn from \"classnames\";\nimport { FirebaseContext } from \"../../components/context/firebaseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GamePage = () => {\n  _s();\n\n  const firebase = useContext(FirebaseContext);\n  const POKEMONS = PokemonsJSON;\n  const [pokemons, setPokemons] = useState(() => [...POKEMONS]);\n\n  const getPokemons = async () => {\n    const response = await firebase.getPokemons();\n    setPokemons(response);\n  };\n\n  useEffect(() => {\n    getPokemons();\n  }, []);\n  const history = useHistory();\n\n  const handlerClick = () => {\n    history.push(\"/\");\n  };\n\n  const flipCard = (id, objId) => {\n    setPokemons(prevState => {\n      return Object.entries(prevState).reduce((acc, item) => {\n        const pokemon = { ...item[1]\n        };\n\n        if (item[0] === objId) {\n          pokemon.active = !pokemon.active;\n          database.ref(\"pokemons/\" + objId).set({ ...pokemon\n          });\n        }\n\n        acc[item[0]] = pokemon;\n        return acc;\n      }, {});\n    });\n  };\n\n  const addNewPokemon = () => {\n    const newKey = database.ref().child(\"pokemons\").push().key;\n    database.ref(\"pokemons/\" + newKey).set(POKEMONS[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flex,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(s.button),\n        onClick: addNewPokemon,\n        children: \"ADD NEW POKEMON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flex,\n      children: Object.entries(pokemons).map(([key, pokemon]) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        objId: key,\n        values: pokemon.values,\n        name: pokemon.name,\n        img: pokemon.img,\n        id: pokemon.id,\n        type: pokemon.type,\n        isActive: pokemon.active,\n        flipCard: flipCard\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handlerClick,\n      children: \"Back To HomePage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GamePage, \"UQD1FvKb6vXfqZsaA16lqQNucCk=\", false, function () {\n  return [useHistory];\n});\n\n_c = GamePage;\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/routes/Game/index.js"],"names":["useHistory","PokemonsJSON","PokemonCard","useState","useEffect","useContext","s","database","cn","FirebaseContext","GamePage","firebase","POKEMONS","pokemons","setPokemons","getPokemons","response","history","handlerClick","push","flipCard","id","objId","prevState","Object","entries","reduce","acc","item","pokemon","active","ref","set","addNewPokemon","newKey","child","key","flex","button","map","values","name","img","type"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router\";\r\nimport PokemonsJSON from \"../../data/Pokemons.json\";\r\nimport PokemonCard from \"../../components/PokemonCard/PokemonCard\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport s from \"./style.module.css\";\r\nimport database from \"../../service/firebase\";\r\nimport cn from \"classnames\";\r\nimport { FirebaseContext } from \"../../components/context/firebaseContext\";\r\n\r\nconst GamePage = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const POKEMONS = PokemonsJSON;\r\n  const [pokemons, setPokemons] = useState(() => [...POKEMONS]);\r\n\r\n  const getPokemons = async () => {\r\n    const response = await firebase.getPokemons();\r\n    setPokemons(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPokemons();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handlerClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const flipCard = (id, objId) => {\r\n    setPokemons((prevState) => {\r\n      return Object.entries(prevState).reduce((acc, item) => {\r\n        const pokemon = { ...item[1] };\r\n        if (item[0] === objId) {\r\n          pokemon.active = !pokemon.active;\r\n          database.ref(\"pokemons/\" + objId).set({\r\n            ...pokemon,\r\n          });\r\n        }\r\n\r\n        acc[item[0]] = pokemon;\r\n        return acc;\r\n      }, {});\r\n    });\r\n  };\r\n\r\n  const addNewPokemon = () => {\r\n    const newKey = database.ref().child(\"pokemons\").push().key;\r\n    database.ref(\"pokemons/\" + newKey).set(POKEMONS[0]);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.flex}>\r\n        <button className={cn(s.button)} onClick={addNewPokemon}>\r\n          ADD NEW POKEMON\r\n        </button>\r\n      </div>\r\n      <div className={s.flex}>\r\n        {Object.entries(pokemons).map(([key, pokemon]) => (\r\n          <PokemonCard\r\n            key={key}\r\n            objId={key}\r\n            values={pokemon.values}\r\n            name={pokemon.name}\r\n            img={pokemon.img}\r\n            id={pokemon.id}\r\n            type={pokemon.type}\r\n            isActive={pokemon.active}\r\n            flipCard={flipCard}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button className=\"button\" onClick={handlerClick}>\r\n        Back To HomePage\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n"]},"metadata":{},"sourceType":"module"}