{"ast":null,"code":"var _jsxFileName = \"C:\\\\ZarMarathon\\\\pokemon-game\\\\src\\\\routes\\\\Game\\\\routes\\\\start\\\\StartPage.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router\";\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\nimport { useState, useEffect, useContext } from \"react\";\nimport s from \"./style.module.css\";\nimport database from \"../../../../service/firebase\";\nimport cn from \"classnames\";\nimport { FirebaseContext } from \"../../../../components/context/firebaseContext\";\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getPokemons, selectPokemonsData } from \"../../../../store/pokemons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartPage = () => {\n  _s();\n\n  const firebase = useContext(FirebaseContext);\n  const pokemonsContext = useContext(PokemonContext);\n  const [pokemons, setPokemons] = useState({}); // const dispatch = useDispatch();\n  // const pokemonRedux = useSelector(selectPokemonsData);\n\n  useEffect(() => {\n    firebase.getPokemons(pokemons => setPokemons(pokemons));\n    console.log(pokemons); // dispatch(getPokemons(pokemons));\n\n    return () => {\n      firebase.offPockemonSocket();\n    };\n  }, []);\n  const history = useHistory();\n\n  const handlerClick = () => {\n    history.push(\"/\");\n  };\n\n  const handlerSelect = key => {\n    const pokemon = { ...pokemons[key]\n    };\n    pokemonsContext.onSelectedPokemons(key, pokemon);\n    setPokemons(prevState => ({ ...prevState,\n      [key]: { ...prevState[key],\n        selected: !prevState[key].selected\n      }\n    }));\n  };\n\n  const handlerGoBoard = () => {\n    history.push(\"/game/board\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flexbutton,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(s.button),\n        onClick: handlerGoBoard,\n        disabled: Object.keys(pokemonsContext.pokemons).length < 5,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flex,\n      children: Object.entries(pokemons).map(([key, pokemon]) => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        className: s.card,\n        objId: key,\n        values: pokemon.values,\n        name: pokemon.name,\n        img: pokemon.img,\n        id: pokemon.id,\n        type: pokemon.type,\n        isActive: true,\n        isSelected: pokemon.selected,\n        handlerSelect: () => {\n          if (Object.keys(pokemonsContext.pokemons).length < 5 || pokemon.selected) {\n            handlerSelect(key);\n          }\n        }\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.flexbutton,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(s.button),\n        onClick: handlerClick,\n        children: \"Back To HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartPage, \"kGbAElWn8ZQnjwwaNjWuZgA8Yh0=\", false, function () {\n  return [useHistory];\n});\n\n_c = StartPage;\nexport default StartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/routes/Game/routes/start/StartPage.js"],"names":["useHistory","PokemonCard","useState","useEffect","useContext","s","database","cn","FirebaseContext","PokemonContext","useDispatch","useSelector","getPokemons","selectPokemonsData","StartPage","firebase","pokemonsContext","pokemons","setPokemons","console","log","offPockemonSocket","history","handlerClick","push","handlerSelect","key","pokemon","onSelectedPokemons","prevState","selected","handlerGoBoard","flexbutton","button","Object","keys","length","flex","entries","map","card","values","name","img","id","type"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport s from \"./style.module.css\";\r\nimport database from \"../../../../service/firebase\";\r\nimport cn from \"classnames\";\r\nimport { FirebaseContext } from \"../../../../components/context/firebaseContext\";\r\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getPokemons, selectPokemonsData } from \"../../../../store/pokemons\";\r\n\r\nconst StartPage = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const pokemonsContext = useContext(PokemonContext);\r\n  const [pokemons, setPokemons] = useState({});\r\n  // const dispatch = useDispatch();\r\n  // const pokemonRedux = useSelector(selectPokemonsData);\r\n\r\n  useEffect(() => {\r\n    firebase.getPokemons((pokemons) => setPokemons(pokemons));\r\n    console.log(pokemons);\r\n    // dispatch(getPokemons(pokemons));\r\n    return () => {\r\n      firebase.offPockemonSocket();\r\n    };\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handlerClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const handlerSelect = (key) => {\r\n    const pokemon = { ...pokemons[key] };\r\n    pokemonsContext.onSelectedPokemons(key, pokemon);\r\n    setPokemons((prevState) => ({\r\n      ...prevState,\r\n      [key]: {\r\n        ...prevState[key],\r\n        selected: !prevState[key].selected,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handlerGoBoard = () => {\r\n    history.push(\"/game/board\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.flexbutton}>\r\n        <button\r\n          className={cn(s.button)}\r\n          onClick={handlerGoBoard}\r\n          disabled={Object.keys(pokemonsContext.pokemons).length < 5}\r\n        >\r\n          Start Game\r\n        </button>\r\n      </div>\r\n      <div className={s.flex}>\r\n        {Object.entries(pokemons).map(([key, pokemon]) => (\r\n          <PokemonCard\r\n            className={s.card}\r\n            key={key}\r\n            objId={key}\r\n            values={pokemon.values}\r\n            name={pokemon.name}\r\n            img={pokemon.img}\r\n            id={pokemon.id}\r\n            type={pokemon.type}\r\n            isActive={true}\r\n            isSelected={pokemon.selected}\r\n            handlerSelect={() => {\r\n              if (\r\n                Object.keys(pokemonsContext.pokemons).length < 5 ||\r\n                pokemon.selected\r\n              ) {\r\n                handlerSelect(key);\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={s.flexbutton}>\r\n        <button className={cn(s.button)} onClick={handlerClick}>\r\n          Back To HomePage\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n"]},"metadata":{},"sourceType":"module"}