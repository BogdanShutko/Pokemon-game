{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport FirebaseClass from \"../service/firebase\";\nexport const slice = createSlice({\n  name: \"pokemons\",\n  initialState: {\n    isLoading: false,\n    data: {},\n    firstPlayerPokemons: {},\n    secondPlayerPokemons: [],\n    error: null\n  },\n  reducers: {\n    fetchPokemons: state => ({ ...state,\n      isLoading: true\n    }),\n    fetchPokemonResolve: (state, action) => ({ ...state,\n      isLoading: false,\n      data: action.payload\n    }),\n    fetchPokemonReject: (state, action) => ({ ...state,\n      isLoading: false,\n      data: {},\n      error: action.payload\n    }),\n    addFirstPlayerPokemons: (state, action) => ({ ...state,\n      isLoading: false,\n      firstPlayerPokemons: action.payload\n    }),\n    addSecondPlayerPokemons: (state, action) => ({ ...state,\n      isLoading: false,\n      secondPlayerPokemons: action.payload\n    })\n  }\n});\nexport const {\n  fetchPokemons,\n  fetchPokemonResolve,\n  fetchPokemonReject,\n  addFirstPlayerPokemons,\n  addSecondPlayerPokemons\n} = slice.actions;\nexport const selectPokemonsLoading = state => state.pokemons.isLoading;\nexport const selectPokemonsData = state => state.pokemons.data;\nexport const firstPlayerPokemons = state => state.pokemons.firstPlayerPokemons;\nexport const secondPlayerPokemons = state => state.pokemons.secondPlayerPokemons;\nexport const getPokemonsAsync = () => async dispatch => {\n  dispatch(fetchPokemons());\n  const data = await FirebaseClass.getPokemonsOnce();\n  dispatch(fetchPokemonResolve(data));\n};\nexport const addPokemonsAsync = data => async dispatch => {\n  dispatch(fetchPokemons());\n  await dispatch(addFirstPlayerPokemons(data));\n};\nexport const addSecondPokemonsAsync = data => async dispatch => {\n  dispatch(fetchPokemons());\n  await dispatch(addSecondPlayerPokemons(data));\n};\nexport default slice.reducer;","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/store/pokemons.js"],"names":["createSlice","FirebaseClass","slice","name","initialState","isLoading","data","firstPlayerPokemons","secondPlayerPokemons","error","reducers","fetchPokemons","state","fetchPokemonResolve","action","payload","fetchPokemonReject","addFirstPlayerPokemons","addSecondPlayerPokemons","actions","selectPokemonsLoading","pokemons","selectPokemonsData","getPokemonsAsync","dispatch","getPokemonsOnce","addPokemonsAsync","addSecondPokemonsAsync","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport FirebaseClass from \"../service/firebase\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"pokemons\",\r\n  initialState: {\r\n    isLoading: false,\r\n    data: {},\r\n    firstPlayerPokemons: {},\r\n    secondPlayerPokemons: [],\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    fetchPokemons: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    fetchPokemonResolve: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.payload,\r\n    }),\r\n    fetchPokemonReject: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: {},\r\n      error: action.payload,\r\n    }),\r\n    addFirstPlayerPokemons: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      firstPlayerPokemons: action.payload,\r\n    }),\r\n    addSecondPlayerPokemons: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      secondPlayerPokemons: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchPokemons,\r\n  fetchPokemonResolve,\r\n  fetchPokemonReject,\r\n  addFirstPlayerPokemons,\r\n  addSecondPlayerPokemons,\r\n} = slice.actions;\r\n\r\nexport const selectPokemonsLoading = (state) => state.pokemons.isLoading;\r\n\r\nexport const selectPokemonsData = (state) => state.pokemons.data;\r\n\r\nexport const firstPlayerPokemons = (state) =>\r\n  state.pokemons.firstPlayerPokemons;\r\n\r\nexport const secondPlayerPokemons = (state) =>\r\n  state.pokemons.secondPlayerPokemons;\r\n\r\nexport const getPokemonsAsync = () => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  const data = await FirebaseClass.getPokemonsOnce();\r\n  dispatch(fetchPokemonResolve(data));\r\n};\r\n\r\nexport const addPokemonsAsync = (data) => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  await dispatch(addFirstPlayerPokemons(data));\r\n};\r\n\r\nexport const addSecondPokemonsAsync = (data) => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  await dispatch(addSecondPlayerPokemons(data));\r\n};\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}