{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport FirebaseClass from \"../service/firebase\";\nimport { selectUserLocalID } from \"./users\";\nexport const slice = createSlice({\n  name: \"pokemons\",\n  initialState: {\n    isLoading: false,\n    data: {},\n    firstPlayerPokemons: {},\n    secondPlayerPokemons: [],\n    winner: 0,\n    error: null\n  },\n  reducers: {\n    fetchPokemons: state => ({ ...state,\n      isLoading: true\n    }),\n    fetchPokemonResolve: (state, action) => ({ ...state,\n      isLoading: false,\n      data: action.payload\n    }),\n    fetchPokemonReject: (state, action) => ({ ...state,\n      isLoading: false,\n      data: {},\n      error: action.payload\n    }),\n    addFirstPlayerPokemons: (state, action) => ({ ...state,\n      isLoading: false,\n      firstPlayerPokemons: action.payload\n    }),\n    addSecondPlayerPokemons: (state, action) => ({ ...state,\n      isLoading: false,\n      secondPlayerPokemons: action.payload\n    }),\n    changeWinner: (state, action) => ({ ...state,\n      winner: action.payload\n    }),\n    clearState: state => ({\n      isLoading: false,\n      data: {},\n      firstPlayerPokemons: {},\n      secondPlayerPokemons: [],\n      winner: 0,\n      error: null\n    })\n  }\n});\nexport const {\n  fetchPokemons,\n  fetchPokemonResolve,\n  fetchPokemonReject,\n  addFirstPlayerPokemons,\n  addSecondPlayerPokemons,\n  changeWinner,\n  clearState\n} = slice.actions;\nexport const selectPokemonsLoading = state => state.pokemons.isLoading;\nexport const selectPokemonsData = state => state.pokemons.data;\nexport const firstPlayerPokemons = state => state.pokemons.firstPlayerPokemons;\nexport const winner = state => state.pokemons.winner;\nexport const secondPlayerPokemons = state => state.pokemons.secondPlayerPokemons;\nexport const getPokemonsAsync = () => async (dispatch, getState) => {\n  dispatch(fetchPokemons());\n  const localId = selectUserLocalID(getState());\n  console.log(localId);\n  const data = await fetch(`https://pokemon-game-d7dc9-default-rtdb.europe-west1.firebasedatabase.app/${localId}/pokemons.json`).then(res => res.json());\n  console.log(\"######: DATA\", data);\n  dispatch(fetchPokemonResolve(data));\n};\nexport const addPokemonsAsync = data => async dispatch => {\n  dispatch(fetchPokemons());\n  await dispatch(addFirstPlayerPokemons(data));\n};\nexport const addSecondPokemonsAsync = data => async dispatch => {\n  dispatch(fetchPokemons());\n  await dispatch(addSecondPlayerPokemons(data));\n};\nexport const addPokemonToDb = (data, userID) => async dispatch => {\n  const addFunction = await FirebaseClass.addPokemon(data, userID);\n};\nexport default slice.reducer;","map":{"version":3,"sources":["C:/ZarMarathon/pokemon-game/src/store/pokemons.js"],"names":["createSlice","FirebaseClass","selectUserLocalID","slice","name","initialState","isLoading","data","firstPlayerPokemons","secondPlayerPokemons","winner","error","reducers","fetchPokemons","state","fetchPokemonResolve","action","payload","fetchPokemonReject","addFirstPlayerPokemons","addSecondPlayerPokemons","changeWinner","clearState","actions","selectPokemonsLoading","pokemons","selectPokemonsData","getPokemonsAsync","dispatch","getState","localId","console","log","fetch","then","res","json","addPokemonsAsync","addSecondPokemonsAsync","addPokemonToDb","userID","addFunction","addPokemon","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport FirebaseClass from \"../service/firebase\";\r\nimport { selectUserLocalID } from \"./users\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"pokemons\",\r\n  initialState: {\r\n    isLoading: false,\r\n    data: {},\r\n    firstPlayerPokemons: {},\r\n    secondPlayerPokemons: [],\r\n    winner: 0,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    fetchPokemons: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    fetchPokemonResolve: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.payload,\r\n    }),\r\n    fetchPokemonReject: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: {},\r\n      error: action.payload,\r\n    }),\r\n    addFirstPlayerPokemons: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      firstPlayerPokemons: action.payload,\r\n    }),\r\n    addSecondPlayerPokemons: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      secondPlayerPokemons: action.payload,\r\n    }),\r\n    changeWinner: (state, action) => ({\r\n      ...state,\r\n      winner: action.payload,\r\n    }),\r\n    clearState: (state) => ({\r\n      isLoading: false,\r\n      data: {},\r\n      firstPlayerPokemons: {},\r\n      secondPlayerPokemons: [],\r\n      winner: 0,\r\n      error: null,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchPokemons,\r\n  fetchPokemonResolve,\r\n  fetchPokemonReject,\r\n  addFirstPlayerPokemons,\r\n  addSecondPlayerPokemons,\r\n  changeWinner,\r\n  clearState,\r\n} = slice.actions;\r\n\r\nexport const selectPokemonsLoading = (state) => state.pokemons.isLoading;\r\n\r\nexport const selectPokemonsData = (state) => state.pokemons.data;\r\n\r\nexport const firstPlayerPokemons = (state) =>\r\n  state.pokemons.firstPlayerPokemons;\r\n\r\nexport const winner = (state) => state.pokemons.winner;\r\n\r\nexport const secondPlayerPokemons = (state) =>\r\n  state.pokemons.secondPlayerPokemons;\r\n\r\nexport const getPokemonsAsync = () => async (dispatch, getState) => {\r\n  dispatch(fetchPokemons());\r\n  const localId = selectUserLocalID(getState());\r\n  console.log(localId);\r\n  const data = await fetch(\r\n    `https://pokemon-game-d7dc9-default-rtdb.europe-west1.firebasedatabase.app/${localId}/pokemons.json`\r\n  ).then((res) => res.json());\r\n  console.log(\"######: DATA\", data);\r\n  dispatch(fetchPokemonResolve(data));\r\n};\r\n\r\nexport const addPokemonsAsync = (data) => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  await dispatch(addFirstPlayerPokemons(data));\r\n};\r\n\r\nexport const addSecondPokemonsAsync = (data) => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  await dispatch(addSecondPlayerPokemons(data));\r\n};\r\n\r\nexport const addPokemonToDb = (data, userID) => async (dispatch) => {\r\n  const addFunction = await FirebaseClass.addPokemon(data, userID);\r\n};\r\n\r\nexport default slice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}