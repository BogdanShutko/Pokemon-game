[{"C:\\ZarMarathon\\pokemon-game\\src\\index.js":"1","C:\\ZarMarathon\\pokemon-game\\src\\App.js":"2","C:\\ZarMarathon\\pokemon-game\\src\\components\\Header\\Header.js":"3","C:\\ZarMarathon\\pokemon-game\\src\\components\\Footer\\Footer.js":"4","C:\\ZarMarathon\\pokemon-game\\src\\components\\Layout\\Layout.js":"5","C:\\ZarMarathon\\pokemon-game\\src\\components\\PokemonCard\\PokemonCard.js":"6","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Home\\index.js":"7","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\index.js":"8","C:\\ZarMarathon\\pokemon-game\\src\\routes\\MenuHeader\\MenuHeader.js":"9","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Navbar\\Navbar.js":"10","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Menu\\Menu.js":"11","C:\\ZarMarathon\\pokemon-game\\src\\routes\\about\\about.js":"12","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Contact\\contact.js":"13","C:\\ZarMarathon\\pokemon-game\\src\\routes\\NotFound\\NotFound.js":"14","C:\\ZarMarathon\\pokemon-game\\src\\service\\firebase.js":"15","C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\firebaseContext.js":"16","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\finish\\Finish.js":"17","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\BoardPage.js":"18","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\start\\StartPage.js":"19","C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\pokemonContext.js":"20","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\component\\PlayerBoard\\index.js":"21"},{"size":365,"mtime":1631775665754,"results":"22","hashOfConfig":"23"},{"size":1758,"mtime":1632417623132,"results":"24","hashOfConfig":"23"},{"size":667,"mtime":1631803810060,"results":"25","hashOfConfig":"23"},{"size":245,"mtime":1631195826910,"results":"26","hashOfConfig":"23"},{"size":736,"mtime":1631558890646,"results":"27","hashOfConfig":"23"},{"size":1807,"mtime":1632692154023,"results":"28","hashOfConfig":"23"},{"size":2801,"mtime":1632476792763,"results":"29","hashOfConfig":"23"},{"size":1812,"mtime":1632684168368,"results":"30","hashOfConfig":"23"},{"size":540,"mtime":1632066596874,"results":"31","hashOfConfig":"23"},{"size":511,"mtime":1631803602078,"results":"32","hashOfConfig":"23"},{"size":1293,"mtime":1631801156574,"results":"33","hashOfConfig":"23"},{"size":120,"mtime":1631774950573,"results":"34","hashOfConfig":"23"},{"size":126,"mtime":1631774950574,"results":"35","hashOfConfig":"23"},{"size":133,"mtime":1631775213915,"results":"36","hashOfConfig":"23"},{"size":1216,"mtime":1632270235067,"results":"37","hashOfConfig":"23"},{"size":89,"mtime":1632270235056,"results":"38","hashOfConfig":"23"},{"size":3203,"mtime":1632719391812,"results":"39","hashOfConfig":"23"},{"size":4451,"mtime":1632681961322,"results":"40","hashOfConfig":"23"},{"size":2539,"mtime":1632476793011,"results":"41","hashOfConfig":"23"},{"size":88,"mtime":1632270235056,"results":"42","hashOfConfig":"23"},{"size":1062,"mtime":1632433295652,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1g7kebq",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\ZarMarathon\\pokemon-game\\src\\index.js",[],["92","93"],"C:\\ZarMarathon\\pokemon-game\\src\\App.js",["94"],"import HomePage from \"./routes/Home\";\r\nimport GamePage from \"./routes/Game\";\r\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport About from \"./routes/about/about\";\r\nimport Contact from \"./routes/Contact/contact\";\r\nimport MenuHeader from \"./routes/MenuHeader/MenuHeader\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport NotFound from \"./routes/NotFound/NotFound\";\r\nimport { FirebaseContext } from \"./components/context/firebaseContext\";\r\nimport s from \"./style.module.css\";\r\nimport cn from \"classnames\";\r\nimport Firebase from \"./service/firebase\";\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n  const isPadding =\r\n    location.pathname === \"/\" || location.pathname === \"/game/board\";\r\n  return (\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <Switch>\r\n        <Route path=\"/404\" component={NotFound} />\r\n        <Route>\r\n          <>\r\n            <MenuHeader bgActive={!isPadding} />\r\n            <div\r\n              className={cn(s.wrap, {\r\n                [s.isHomePage]: isPadding,\r\n              })}\r\n            >\r\n              <Switch>\r\n                <Route path=\"/\" exact component={HomePage}></Route>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route path=\"/game\" component={GamePage}></Route>\r\n                <Route path=\"/about\" component={About}></Route>\r\n                <Route path=\"/contact\" component={Contact}></Route>\r\n                <Route\r\n                  render={() => {\r\n                    return <Redirect to=\"/404\" />;\r\n                  }}\r\n                />\r\n              </Switch>\r\n            </div>\r\n          </>\r\n        </Route>\r\n      </Switch>\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\components\\Header\\Header.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Footer\\Footer.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Layout\\Layout.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\PokemonCard\\PokemonCard.js",["95","96"],"import s from \"./style.module.css\";\r\nimport BackSide from \"../../assets/card-back-side.jpg\";\r\nimport { useState } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nconst PokemonCard = ({\r\n  className,\r\n  values,\r\n  minimize,\r\n  img,\r\n  id,\r\n  name,\r\n  type,\r\n  isActive,\r\n  isSelected,\r\n  handlerSelect,\r\n  possession,\r\n  key,\r\n}) => {\r\n  const handlerClick = () => {\r\n    handlerSelect && handlerSelect(key);\r\n  };\r\n  return (\r\n    <div\r\n      className={cn(className, s.pokemonCard, {\r\n        [s.active]: isActive,\r\n        [s.selected]: isSelected,\r\n      })}\r\n      onClick={handlerClick}\r\n    >\r\n      <div className={s.cardFront}>\r\n        <div className={cn(s.wrap, s.front)}>\r\n          <div\r\n            className={cn(s.pokemon, s[type])}\r\n            style={{ backgroundColor: possession }}\r\n          >\r\n            <div className={s.values}>\r\n              <div className={cn(s.count, s.top)}>{values.top}</div>\r\n              <div className={cn(s.count, s.right)}>{values.right}</div>\r\n              <div className={cn(s.count, s.bottom)}>{values.bottom}</div>\r\n              <div className={cn(s.count, s.left)}>{values.left}</div>\r\n            </div>\r\n            <div className={s.imgContainer}>\r\n              <img src={img} alt={name} />\r\n            </div>\r\n            {!minimize && (\r\n              <div className={s.info}>\r\n                <span className={s.number}>#{id}</span>\r\n                <h3 className={s.name}>{name}</h3>\r\n                <small className={s.type}>\r\n                  Type: <span>{type}</span>\r\n                </small>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.cardBack}>\r\n        <div className={cn(s.wrap, s.back)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Home\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\MenuHeader\\MenuHeader.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Navbar\\Navbar.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Menu\\Menu.js",["97"],"import cn from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport s from \"./style.module.css\";\r\n\r\nconst MENU = [\r\n  {\r\n    title: \"HOME\",\r\n    to: \"/\",\r\n  },\r\n  {\r\n    title: \"GAME\",\r\n    to: \"/game\",\r\n  },\r\n  {\r\n    title: \"ABOUT\",\r\n    to: \"/about\",\r\n  },\r\n  {\r\n    title: \"CONTACT\",\r\n    to: \"/contact\",\r\n  },\r\n];\r\n\r\nconst Menu = ({ checkActive, changeActive }) => {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        s.menuContainer,\r\n        { [s.active]: checkActive === true },\r\n        { [s.deactive]: checkActive === false }\r\n      )}\r\n    >\r\n      <div className={s.overlay} />\r\n      <div className={s.menuItems}>\r\n        <ul>\r\n          {MENU.map(({ title, to }, index) => {\r\n            return (\r\n              <li key={index}>\r\n                <Link to={to} onClick={changeActive}>\r\n                  {title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n\r\n{\r\n  /* <li>\r\n            <a href=\"#welcome\">HOME</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#game\">GAME</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#about\">ABOUT</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\">CONTACT</a>\r\n          </li> */\r\n}\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\about\\about.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Contact\\contact.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\NotFound\\NotFound.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\service\\firebase.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\firebaseContext.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\finish\\Finish.js",["98"],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\BoardPage.js",["99","100","101"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport PlayerBoard from \"./component/PlayerBoard\";\r\nimport s from \"./style.module.css\";\r\n\r\nconst BoardPage = () => {\r\n  const { pokemons, pokemons2, changePokemons2, changeWinner } =\r\n    useContext(PokemonContext);\r\n\r\n  const history = useHistory();\r\n  if (Object.keys(pokemons).length === 0) {\r\n    history.replace(\"/game\");\r\n  }\r\n\r\n  const [board, setBoard] = useState([]);\r\n  const [player1, setPlayer1] = useState(() => {\r\n    return Object.values(pokemons).map((item) => ({\r\n      ...item,\r\n      possession: \"blue\",\r\n    }));\r\n  });\r\n  const [player2, setPlayer2] = useState([]);\r\n  const [choiceCard, setChoiceCard] = useState(null);\r\n  const [steps, setSteps] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    const boardResponse = await fetch(\r\n      \"https://reactmarathon-api.netlify.app/api/board\"\r\n    );\r\n    const boardRequest = await boardResponse.json();\r\n\r\n    const playerTwoResponse = await fetch(\r\n      \"https://reactmarathon-api.netlify.app/api/create-player\"\r\n    );\r\n\r\n    const playerTwoRequest = await playerTwoResponse.json();\r\n\r\n    setPlayer2(() => {\r\n      return playerTwoRequest.data.map((item) => ({\r\n        ...item,\r\n        possession: \"red\",\r\n      }));\r\n    });\r\n\r\n    await changePokemons2(playerTwoRequest);\r\n    setBoard(boardRequest.data);\r\n    console.log(pokemons2);\r\n  }, []);\r\n\r\n  const handlerClickBoardPlate = async (position) => {\r\n    console.log(pokemons2);\r\n    if (choiceCard) {\r\n      const params = {\r\n        position,\r\n        card: choiceCard,\r\n        board,\r\n      };\r\n\r\n      const res = await fetch(\r\n        \"https://reactmarathon-api.netlify.app/api/players-turn\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(params),\r\n        }\r\n      );\r\n\r\n      const request = await res.json();\r\n      setBoard(request.data);\r\n    }\r\n\r\n    if (choiceCard.player === 1) {\r\n      setPlayer1((prevState) =>\r\n        prevState.filter((item) => item.id !== choiceCard.id)\r\n      );\r\n    }\r\n\r\n    if (choiceCard.player === 2) {\r\n      setPlayer2((prevState) =>\r\n        prevState.filter((item) => item.id !== choiceCard.id)\r\n      );\r\n    }\r\n    setSteps((prevState) => {\r\n      const count = prevState + 1;\r\n      return count;\r\n    });\r\n  };\r\n\r\n  const counterWin = (board, player1, player2) => {\r\n    let player1Count = player1.length;\r\n    let player2Count = player2.length;\r\n    board.forEach((item, index) => {\r\n      if (item.card.possession === \"blue\") {\r\n        player1Count++;\r\n      } else if (item.card.possession === \"red\") player2Count++;\r\n    });\r\n    return [player1Count, player2Count];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (steps === 9) {\r\n      const [count1, count2] = counterWin(board, player1, player2);\r\n      if (count1 > count2) {\r\n        changeWinner(1);\r\n        alert(\"WIN\");\r\n        history.replace(\"/game/finish\");\r\n      } else if (count2 > count1) {\r\n        changeWinner(2);\r\n        alert(\"LOSE\");\r\n        history.replace(\"/game/finish\");\r\n      } else {\r\n        changeWinner(0);\r\n        alert(\"DRAW\");\r\n        history.replace(\"/game/finish\");\r\n      }\r\n    }\r\n  }, [steps]);\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <div className={s.playerOne}>\r\n        {\r\n          <PlayerBoard\r\n            player={1}\r\n            onClickCard={(card) => setChoiceCard(card)}\r\n            cards={player1}\r\n          ></PlayerBoard>\r\n        }\r\n      </div>\r\n      <div className={s.board}>\r\n        {board.map((item) => {\r\n          return (\r\n            <div\r\n              key={item.position}\r\n              className={s.boardPlate}\r\n              onClick={() =>\r\n                !item.card && handlerClickBoardPlate(item.position)\r\n              }\r\n            >\r\n              ({item.card && <PokemonCard {...item.card} isActive minimize />})\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={s.playerTwo}>\r\n        {\r\n          <PlayerBoard\r\n            player={2}\r\n            cards={player2}\r\n            onClickCard={(card) => setChoiceCard(card)}\r\n          ></PlayerBoard>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardPage;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\start\\StartPage.js",["102","103"],"import { useHistory } from \"react-router\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport s from \"./style.module.css\";\r\nimport database from \"../../../../service/firebase\";\r\nimport cn from \"classnames\";\r\nimport { FirebaseContext } from \"../../../../components/context/firebaseContext\";\r\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\r\n\r\nconst StartPage = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const pokemonsContext = useContext(PokemonContext);\r\n  const [pokemons, setPokemons] = useState({});\r\n\r\n  useEffect(() => {\r\n    firebase.getPokemons((pokemons) => setPokemons(pokemons));\r\n    return () => {\r\n      firebase.offPockemonSocket();\r\n    };\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const handlerClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const handlerSelect = (key) => {\r\n    const pokemon = { ...pokemons[key] };\r\n    pokemonsContext.onSelectedPokemons(key, pokemon);\r\n    setPokemons((prevState) => ({\r\n      ...prevState,\r\n      [key]: {\r\n        ...prevState[key],\r\n        selected: !prevState[key].selected,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handlerGoBoard = () => {\r\n    history.push(\"/game/board\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.flexbutton}>\r\n        <button\r\n          className={cn(s.button)}\r\n          onClick={handlerGoBoard}\r\n          disabled={Object.keys(pokemonsContext.pokemons).length < 5}\r\n        >\r\n          Start Game\r\n        </button>\r\n      </div>\r\n      <div className={s.flex}>\r\n        {Object.entries(pokemons).map(([key, pokemon]) => (\r\n          <PokemonCard\r\n            className={s.card}\r\n            key={key}\r\n            objId={key}\r\n            values={pokemon.values}\r\n            name={pokemon.name}\r\n            img={pokemon.img}\r\n            id={pokemon.id}\r\n            type={pokemon.type}\r\n            isActive={true}\r\n            isSelected={pokemon.selected}\r\n            handlerSelect={() => {\r\n              if (\r\n                Object.keys(pokemonsContext.pokemons).length < 5 ||\r\n                pokemon.selected\r\n              ) {\r\n                handlerSelect(key);\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={s.flexbutton}>\r\n        <button className={cn(s.button)} onClick={handlerClick}>\r\n          Back To HomePage\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\pokemonContext.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\component\\PlayerBoard\\index.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":53,"column":1,"nodeType":"116","messageId":"117","endLine":66,"endColumn":2},{"ruleId":"108","severity":1,"message":"118","line":42,"column":10,"nodeType":"110","messageId":"111","endLine":42,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":28,"column":13,"nodeType":"121","endLine":50,"endColumn":4},{"ruleId":"119","severity":1,"message":"122","line":50,"column":6,"nodeType":"123","endLine":50,"endColumn":8,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":121,"column":6,"nodeType":"123","endLine":121,"endColumn":13,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"127","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"128","line":20,"column":6,"nodeType":"123","endLine":20,"endColumn":8,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'BackSide' is defined but never used.","'useState' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'player2' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'changePokemons2' and 'pokemons2'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has missing dependencies: 'board', 'changeWinner', 'history', 'player1', and 'player2'. Either include them or remove the dependency array.",["133"],"'database' is defined but never used.","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [changePokemons2, pokemons2]",{"range":"141","text":"142"},"Update the dependencies array to be: [board, changeWinner, history, player1, player2, steps]",{"range":"143","text":"144"},"Update the dependencies array to be: [firebase]",{"range":"145","text":"146"},[1580,1582],"[changePokemons2, pokemons2]",[3426,3433],"[board, changeWinner, history, player1, player2, steps]",[801,803],"[firebase]"]