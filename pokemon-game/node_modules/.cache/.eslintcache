[{"C:\\ZarMarathon\\pokemon-game\\src\\index.js":"1","C:\\ZarMarathon\\pokemon-game\\src\\App.js":"2","C:\\ZarMarathon\\pokemon-game\\src\\components\\Header\\Header.js":"3","C:\\ZarMarathon\\pokemon-game\\src\\components\\Footer\\Footer.js":"4","C:\\ZarMarathon\\pokemon-game\\src\\components\\Layout\\Layout.js":"5","C:\\ZarMarathon\\pokemon-game\\src\\components\\PokemonCard\\PokemonCard.js":"6","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Home\\index.js":"7","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\index.js":"8","C:\\ZarMarathon\\pokemon-game\\src\\routes\\MenuHeader\\MenuHeader.js":"9","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Navbar\\Navbar.js":"10","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Menu\\Menu.js":"11","C:\\ZarMarathon\\pokemon-game\\src\\routes\\about\\about.js":"12","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Contact\\contact.js":"13","C:\\ZarMarathon\\pokemon-game\\src\\routes\\NotFound\\NotFound.js":"14","C:\\ZarMarathon\\pokemon-game\\src\\service\\firebase.js":"15","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\finish\\Finish.js":"16","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\BoardPage.js":"17","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\start\\StartPage.js":"18","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\component\\PlayerBoard\\index.js":"19","C:\\ZarMarathon\\pokemon-game\\src\\store\\index.js":"20","C:\\ZarMarathon\\pokemon-game\\src\\store\\pokemons.js":"21","C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\pokemonContext.js":"22","C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\firebaseContext.js":"23","C:\\ZarMarathon\\pokemon-game\\src\\components\\Modal\\Modal.js":"24","C:\\ZarMarathon\\pokemon-game\\src\\components\\LoginForm\\index.js":"25","C:\\ZarMarathon\\pokemon-game\\src\\components\\Input\\index.js":"26","C:\\ZarMarathon\\pokemon-game\\src\\components\\PrivateComponent\\index.js":"27"},{"size":484,"mtime":1632861878840,"results":"28","hashOfConfig":"29"},{"size":2098,"mtime":1633120452964,"results":"30","hashOfConfig":"29"},{"size":667,"mtime":1631803810060,"results":"31","hashOfConfig":"29"},{"size":245,"mtime":1631195826910,"results":"32","hashOfConfig":"29"},{"size":736,"mtime":1631558890646,"results":"33","hashOfConfig":"29"},{"size":1748,"mtime":1632859909707,"results":"34","hashOfConfig":"29"},{"size":2801,"mtime":1632723483342,"results":"35","hashOfConfig":"29"},{"size":674,"mtime":1632941862905,"results":"36","hashOfConfig":"29"},{"size":2347,"mtime":1633122627018,"results":"37","hashOfConfig":"29"},{"size":772,"mtime":1633087269272,"results":"38","hashOfConfig":"29"},{"size":1293,"mtime":1631801156574,"results":"39","hashOfConfig":"29"},{"size":120,"mtime":1631774950573,"results":"40","hashOfConfig":"29"},{"size":126,"mtime":1631774950574,"results":"41","hashOfConfig":"29"},{"size":133,"mtime":1631775213915,"results":"42","hashOfConfig":"29"},{"size":1387,"mtime":1632866616820,"results":"43","hashOfConfig":"29"},{"size":2854,"mtime":1632941499907,"results":"44","hashOfConfig":"29"},{"size":4820,"mtime":1632941785558,"results":"45","hashOfConfig":"29"},{"size":3578,"mtime":1632941785641,"results":"46","hashOfConfig":"29"},{"size":1062,"mtime":1632723483339,"results":"47","hashOfConfig":"29"},{"size":185,"mtime":1632851041625,"results":"48","hashOfConfig":"29"},{"size":2511,"mtime":1632940608675,"results":"49","hashOfConfig":"29"},{"size":88,"mtime":1632857310881,"results":"50","hashOfConfig":"29"},{"size":89,"mtime":1632858295758,"results":"51","hashOfConfig":"29"},{"size":986,"mtime":1633114040187,"results":"52","hashOfConfig":"29"},{"size":1629,"mtime":1633123014864,"results":"53","hashOfConfig":"29"},{"size":516,"mtime":1633116843423,"results":"54","hashOfConfig":"29"},{"size":453,"mtime":1633119756487,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1odzg37",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\ZarMarathon\\pokemon-game\\src\\index.js",[],["118","119"],"C:\\ZarMarathon\\pokemon-game\\src\\App.js",["120","121"],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Header\\Header.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Footer\\Footer.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Layout\\Layout.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\PokemonCard\\PokemonCard.js",["122","123"],"import s from \"./style.module.css\";\r\nimport BackSide from \"../../assets/card-back-side.jpg\";\r\nimport { useState } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nconst PokemonCard = ({\r\n  className,\r\n  values,\r\n  img,\r\n  id,\r\n  name,\r\n  type,\r\n  isActive,\r\n  isSelected,\r\n  handlerSelect,\r\n  possession,\r\n  minimize,\r\n  key,\r\n}) => {\r\n  const handlerClick = () => {\r\n    handlerSelect && handlerSelect(key);\r\n  };\r\n  return (\r\n    <div\r\n      className={cn(className, s.pokemonCard, {\r\n        [s.active]: isActive,\r\n        [s.selected]: isSelected,\r\n      })}\r\n      onClick={handlerClick}\r\n    >\r\n      <div className={s.cardFront}>\r\n        <div className={cn(s.wrap, s.front)}>\r\n          <div className={cn(s.pokemon, s[type], s[possession])}>\r\n            <div className={s.values}>\r\n              <div className={cn(s.count, s.top)}>{values.top}</div>\r\n              <div className={cn(s.count, s.right)}>{values.right}</div>\r\n              <div className={cn(s.count, s.bottom)}>{values.bottom}</div>\r\n              <div className={cn(s.count, s.left)}>{values.left}</div>\r\n            </div>\r\n            <div className={s.imgContainer}>\r\n              <img src={img} alt={name} />\r\n            </div>\r\n            {!minimize && (\r\n              <div className={s.info}>\r\n                <span className={s.number}>#{id}</span>\r\n                <h3 className={s.name}>{name}</h3>\r\n                <small className={s.type}>\r\n                  Type: <span>{type}</span>\r\n                </small>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.cardBack}>\r\n        <div className={cn(s.wrap, s.back)}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Home\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\index.js",["124","125"],"import { useState } from \"react\";\r\nimport { useRouteMatch, Switch, Route } from \"react-router\";\r\nimport { PokemonContext } from \"../../components/context/pokemonContext\";\r\nimport BoardPage from \"./routes/board/BoardPage\";\r\nimport FinishPage from \"./routes/finish/Finish\";\r\nimport StartPage from \"./routes/start/StartPage\";\r\n\r\nconst GamePage = () => {\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/`} exact component={StartPage} />\r\n      <Route path={`${match.path}/board`} component={BoardPage} />\r\n      <Route path={`${match.path}/finish`} component={FinishPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\MenuHeader\\MenuHeader.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Navbar\\Navbar.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Menu\\Menu.js",["126"],"import cn from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport s from \"./style.module.css\";\r\n\r\nconst MENU = [\r\n  {\r\n    title: \"HOME\",\r\n    to: \"/\",\r\n  },\r\n  {\r\n    title: \"GAME\",\r\n    to: \"/game\",\r\n  },\r\n  {\r\n    title: \"ABOUT\",\r\n    to: \"/about\",\r\n  },\r\n  {\r\n    title: \"CONTACT\",\r\n    to: \"/contact\",\r\n  },\r\n];\r\n\r\nconst Menu = ({ checkActive, changeActive }) => {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        s.menuContainer,\r\n        { [s.active]: checkActive === true },\r\n        { [s.deactive]: checkActive === false }\r\n      )}\r\n    >\r\n      <div className={s.overlay} />\r\n      <div className={s.menuItems}>\r\n        <ul>\r\n          {MENU.map(({ title, to }, index) => {\r\n            return (\r\n              <li key={index}>\r\n                <Link to={to} onClick={changeActive}>\r\n                  {title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n\r\n{\r\n  /* <li>\r\n            <a href=\"#welcome\">HOME</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#game\">GAME</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#about\">ABOUT</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\">CONTACT</a>\r\n          </li> */\r\n}\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\about\\about.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Contact\\contact.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\NotFound\\NotFound.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\service\\firebase.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\finish\\Finish.js",["127","128","129"],"import { useContext } from \"react\";\r\nimport { PokemonContext } from \"../../../../components/context/pokemonContext\";\r\nimport { FireBaseContext } from \"./../../../../components/context/firebaseContext\";\r\nimport s from \"./style.module.css\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  addPokemonToDb,\r\n  clearState,\r\n  firstPlayerPokemons,\r\n  secondPlayerPokemons,\r\n  winner,\r\n} from \"../../../../store/pokemons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst FinishPage = () => {\r\n  const firstPlayer = useSelector(firstPlayerPokemons);\r\n  const secondPlayer = useSelector(secondPlayerPokemons);\r\n  const secondPlayer2 = [...secondPlayer];\r\n  const winnerPlayer = useSelector(winner);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [player2, setPlayer2] = useState(\r\n    secondPlayer2.map((item) => ({ ...item, isSelected: false }))\r\n  );\r\n\r\n  const pickCard = (key) => {\r\n    setPlayer2((prevState) => {\r\n      return prevState.reduce((acc, item) => {\r\n        item.isSelected = false;\r\n        if (item.id === key) {\r\n          setSelectedCard(item);\r\n          item.isSelected = true;\r\n        }\r\n        acc.push(item);\r\n        return acc;\r\n      }, []);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.flex}>\r\n        {Object.values(firstPlayer).map((card) => {\r\n          return <PokemonCard {...card} isActive={true}></PokemonCard>;\r\n        })}\r\n      </div>\r\n      <div className={cn(s.flex, s.button)}>\r\n        <button\r\n          disabled={winnerPlayer === 1 && selectedCard === null}\r\n          onClick={() => {\r\n            if (selectedCard !== null) {\r\n              delete selectedCard.isSelected;\r\n              dispatch(addPokemonToDb(selectedCard));\r\n            }\r\n            dispatch(clearState());\r\n            history.push(\"/game\");\r\n          }}\r\n        >\r\n          {\" \"}\r\n          PLAY AGAIN\r\n        </button>\r\n      </div>\r\n      <div className={s.flex}>\r\n        {player2.map((card, index) => {\r\n          return (\r\n            <PokemonCard\r\n              handlerSelect={() => {\r\n                if (winnerPlayer === 1) {\r\n                  pickCard(card.id);\r\n                }\r\n              }}\r\n              key={index}\r\n              id={card.id}\r\n              name={card.name}\r\n              type={card.type}\r\n              img={card.img}\r\n              values={card.values}\r\n              possession=\"red\"\r\n              isSelected={card.isSelected}\r\n              isActive\r\n            ></PokemonCard>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishPage;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\BoardPage.js",["130","131","132","133","134"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport {\r\n  addSecondPokemonsAsync,\r\n  changeWinner,\r\n  firstPlayerPokemons,\r\n  secondPlayerPokemons,\r\n  winner,\r\n} from \"../../../../store/pokemons\";\r\nimport PlayerBoard from \"./component/PlayerBoard\";\r\nimport s from \"./style.module.css\";\r\n\r\nconst BoardPage = () => {\r\n  const firstPlayer = useSelector(firstPlayerPokemons);\r\n  const secondPlayer = useSelector(secondPlayerPokemons);\r\n  const history = useHistory();\r\n\r\n  if (Object.keys(firstPlayer).length !== 5) {\r\n    history.replace(\"/game\");\r\n  }\r\n\r\n  const [board, setBoard] = useState([]);\r\n  const [player1, setPlayer1] = useState(() => {\r\n    return Object.values(firstPlayer).map((item) => ({\r\n      ...item,\r\n      possession: \"blue\",\r\n    }));\r\n  });\r\n  const [player2, setPlayer2] = useState([]);\r\n  const [choiceCard, setChoiceCard] = useState(null);\r\n  const [steps, setSteps] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    const boardResponse = await fetch(\r\n      \"https://reactmarathon-api.netlify.app/api/board\"\r\n    );\r\n    const boardRequest = await boardResponse.json();\r\n\r\n    const playerTwoResponse = await fetch(\r\n      \"https://reactmarathon-api.netlify.app/api/create-player\"\r\n    );\r\n\r\n    const playerTwoRequest = await playerTwoResponse.json();\r\n    dispatch(addSecondPokemonsAsync(playerTwoRequest.data));\r\n\r\n    setPlayer2(() => {\r\n      return playerTwoRequest.data.map((item) => ({\r\n        ...item,\r\n        possession: \"red\",\r\n      }));\r\n    });\r\n\r\n    // await changePokemons2(playerTwoRequest);\r\n    setBoard(boardRequest.data);\r\n  }, []);\r\n\r\n  const handlerClickBoardPlate = async (position) => {\r\n    if (choiceCard) {\r\n      const params = {\r\n        position,\r\n        card: choiceCard,\r\n        board,\r\n      };\r\n\r\n      const res = await fetch(\r\n        \"https://reactmarathon-api.netlify.app/api/players-turn\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(params),\r\n        }\r\n      );\r\n\r\n      const request = await res.json();\r\n      setBoard(request.data);\r\n    }\r\n\r\n    if (choiceCard.player === 1) {\r\n      setPlayer1((prevState) =>\r\n        prevState.filter((item) => item.id !== choiceCard.id)\r\n      );\r\n    }\r\n\r\n    if (choiceCard.player === 2) {\r\n      setPlayer2((prevState) =>\r\n        prevState.filter((item) => item.id !== choiceCard.id)\r\n      );\r\n    }\r\n    setSteps((prevState) => {\r\n      const count = prevState + 1;\r\n      return count;\r\n    });\r\n  };\r\n\r\n  const counterWin = (board, player1, player2) => {\r\n    let player1Count = player1.length;\r\n    let player2Count = player2.length;\r\n    board.forEach((item, index) => {\r\n      if (item.card.possession === \"blue\") {\r\n        player1Count++;\r\n      } else if (item.card.possession === \"red\") player2Count++;\r\n    });\r\n    return [player1Count, player2Count];\r\n  };\r\n  const winnerPlayer = useSelector(winner);\r\n  useEffect(() => {\r\n    if (steps === 9) {\r\n      const [count1, count2] = counterWin(board, player1, player2);\r\n      if (count1 > count2) {\r\n        dispatch(changeWinner(1));\r\n        console.log(winnerPlayer);\r\n        alert(\"WIN\");\r\n        history.replace(\"/game/finish\");\r\n      } else if (count2 > count1) {\r\n        dispatch(changeWinner(2));\r\n        console.log(winnerPlayer);\r\n        alert(\"LOSE\");\r\n        history.replace(\"/game/finish\");\r\n      } else {\r\n        console.log(winnerPlayer);\r\n        alert(\"DRAW\");\r\n        history.replace(\"/game/finish\");\r\n      }\r\n    }\r\n  }, [steps]);\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <div className={s.playerOne}>\r\n        {\r\n          <PlayerBoard\r\n            player={1}\r\n            onClickCard={(card) => setChoiceCard(card)}\r\n            cards={player1}\r\n          ></PlayerBoard>\r\n        }\r\n      </div>\r\n      <div className={s.board}>\r\n        {board.map((item) => {\r\n          return (\r\n            <div\r\n              key={item.position}\r\n              className={s.boardPlate}\r\n              onClick={() =>\r\n                !item.card && handlerClickBoardPlate(item.position)\r\n              }\r\n            >\r\n              ({item.card && <PokemonCard {...item.card} isActive minimize />})\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={s.playerTwo}>\r\n        {\r\n          <PlayerBoard\r\n            player={2}\r\n            cards={player2}\r\n            onClickCard={(card) => setChoiceCard(card)}\r\n          ></PlayerBoard>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardPage;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\start\\StartPage.js",["135","136","137","138","139"],"import s from \"./style.module.css\";\r\nimport PokemonCard from \"../../../../components/PokemonCard/PokemonCard\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport cn from \"classnames\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addFirstPlayerPokemons,\r\n  addPokemonsAsync,\r\n  firstPlayerPokemons,\r\n  getPokemonsAsync,\r\n  selectPokemonsData,\r\n  selectPokemonsLoading,\r\n} from \"../../../../store/pokemons\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst StartPage = () => {\r\n  const firstPlayer = useSelector(firstPlayerPokemons);\r\n  const [pokemons, setPokemons] = useState({});\r\n  const dispatch = useDispatch();\r\n  const pokemonRedux = useSelector(selectPokemonsData);\r\n  console.log(\"#####: REDUX_POKEMONS:\", pokemonRedux);\r\n  useEffect(() => {\r\n    dispatch(getPokemonsAsync(pokemons));\r\n  }, []);\r\n  useEffect(() => {\r\n    setPokemons(pokemonRedux);\r\n  }, [pokemonRedux]);\r\n\r\n  const history = useHistory();\r\n  const handlerClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const [stateOfChosenPokemons, setStateOfChosenPokemons] = useState({});\r\n  const handlerSelect = (key) => {\r\n    const pokemon = { ...pokemons[key] };\r\n    // pokemonsContext.onSelectedPokemons(key, pokemon);\r\n    setPokemons((prevState) => ({\r\n      ...prevState,\r\n      [key]: {\r\n        ...prevState[key],\r\n        selected: !prevState[key].selected,\r\n      },\r\n    }));\r\n    setStateOfChosenPokemons((prevState) => {\r\n      if (prevState[key]) {\r\n        const copyState = { ...prevState };\r\n        delete copyState[key];\r\n        return copyState;\r\n      }\r\n      return {\r\n        ...prevState,\r\n        [key]: pokemon,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(Object.keys(stateOfChosenPokemons).length);\r\n    dispatch(addPokemonsAsync(stateOfChosenPokemons));\r\n    console.log(firstPlayer);\r\n  }, [stateOfChosenPokemons]);\r\n\r\n  // const handlerSelectedPokemons = (key, pokemon) => {\r\n  //   setSelectedPokemons((prevState) => {\r\n  //     if (prevState[key]) {\r\n  //       const copyState = { ...prevState };\r\n  //       delete copyState[key];\r\n  //       return copyState;\r\n  //     }\r\n  //     return {\r\n  //       ...prevState,\r\n  //       [key]: pokemon,\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  const handlerGoBoard = () => {\r\n    history.push(\"/game/board\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.flexbutton}>\r\n        <button\r\n          className={cn(s.button)}\r\n          onClick={handlerGoBoard}\r\n          disabled={Object.keys(stateOfChosenPokemons).length < 5}\r\n        >\r\n          Start Game\r\n        </button>\r\n      </div>\r\n      <div className={s.flex}>\r\n        {Object.entries(pokemons).map(([key, pokemon]) => (\r\n          <PokemonCard\r\n            className={s.card}\r\n            key={key}\r\n            objId={key}\r\n            values={pokemon.values}\r\n            name={pokemon.name}\r\n            img={pokemon.img}\r\n            id={pokemon.id}\r\n            type={pokemon.type}\r\n            isActive={true}\r\n            isSelected={pokemon.selected}\r\n            handlerSelect={() => {\r\n              if (\r\n                Object.keys(stateOfChosenPokemons).length < 5 ||\r\n                pokemon.selected\r\n              ) {\r\n                handlerSelect(key);\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={s.flexbutton}>\r\n        <button className={cn(s.button)} onClick={handlerClick}>\r\n          Back To HomePage\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\routes\\Game\\routes\\board\\component\\PlayerBoard\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\store\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\store\\pokemons.js",["140"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport FirebaseClass from \"../service/firebase\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"pokemons\",\r\n  initialState: {\r\n    isLoading: false,\r\n    data: {},\r\n    firstPlayerPokemons: {},\r\n    secondPlayerPokemons: [],\r\n    winner: 0,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    fetchPokemons: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    fetchPokemonResolve: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.payload,\r\n    }),\r\n    fetchPokemonReject: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: {},\r\n      error: action.payload,\r\n    }),\r\n    addFirstPlayerPokemons: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      firstPlayerPokemons: action.payload,\r\n    }),\r\n    addSecondPlayerPokemons: (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      secondPlayerPokemons: action.payload,\r\n    }),\r\n    changeWinner: (state, action) => ({\r\n      ...state,\r\n      winner: action.payload,\r\n    }),\r\n    clearState: (state) => ({\r\n      isLoading: false,\r\n      data: {},\r\n      firstPlayerPokemons: {},\r\n      secondPlayerPokemons: [],\r\n      winner: 0,\r\n      error: null,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchPokemons,\r\n  fetchPokemonResolve,\r\n  fetchPokemonReject,\r\n  addFirstPlayerPokemons,\r\n  addSecondPlayerPokemons,\r\n  changeWinner,\r\n  clearState,\r\n} = slice.actions;\r\n\r\nexport const selectPokemonsLoading = (state) => state.pokemons.isLoading;\r\n\r\nexport const selectPokemonsData = (state) => state.pokemons.data;\r\n\r\nexport const firstPlayerPokemons = (state) =>\r\n  state.pokemons.firstPlayerPokemons;\r\n\r\nexport const winner = (state) => state.pokemons.winner;\r\n\r\nexport const secondPlayerPokemons = (state) =>\r\n  state.pokemons.secondPlayerPokemons;\r\n\r\nexport const getPokemonsAsync = () => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  const data = await FirebaseClass.getPokemonsOnce();\r\n  dispatch(fetchPokemonResolve(data));\r\n};\r\n\r\nexport const addPokemonsAsync = (data) => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  await dispatch(addFirstPlayerPokemons(data));\r\n};\r\n\r\nexport const addSecondPokemonsAsync = (data) => async (dispatch) => {\r\n  dispatch(fetchPokemons());\r\n  await dispatch(addSecondPlayerPokemons(data));\r\n};\r\n\r\nexport const addPokemonToDb = (data) => async (dispatch) => {\r\n  const addFunction = await FirebaseClass.addPokemon(data);\r\n};\r\n\r\nexport default slice.reducer;\r\n","C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\pokemonContext.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\context\\firebaseContext.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Modal\\Modal.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\LoginForm\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\Input\\index.js",[],"C:\\ZarMarathon\\pokemon-game\\src\\components\\PrivateComponent\\index.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":14},{"ruleId":"145","severity":1,"message":"150","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":16},{"ruleId":"145","severity":1,"message":"151","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":18},{"ruleId":"145","severity":1,"message":"151","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":18},{"ruleId":"145","severity":1,"message":"152","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":53,"column":1,"nodeType":"155","messageId":"156","endLine":66,"endColumn":2},{"ruleId":"145","severity":1,"message":"157","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":20},{"ruleId":"145","severity":1,"message":"152","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"158","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":25},{"ruleId":"145","severity":1,"message":"157","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":20},{"ruleId":"145","severity":1,"message":"159","line":18,"column":9,"nodeType":"147","messageId":"148","endLine":18,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":37,"column":13,"nodeType":"162","endLine":59,"endColumn":4},{"ruleId":"160","severity":1,"message":"163","line":59,"column":6,"nodeType":"164","endLine":59,"endColumn":8,"suggestions":"165"},{"ruleId":"160","severity":1,"message":"166","line":131,"column":6,"nodeType":"164","endLine":131,"endColumn":13,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"157","line":3,"column":31,"nodeType":"147","messageId":"148","endLine":3,"endColumn":41},{"ruleId":"145","severity":1,"message":"168","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":25},{"ruleId":"145","severity":1,"message":"169","line":13,"column":3,"nodeType":"147","messageId":"148","endLine":13,"endColumn":24},{"ruleId":"160","severity":1,"message":"170","line":25,"column":6,"nodeType":"164","endLine":25,"endColumn":8,"suggestions":"171"},{"ruleId":"160","severity":1,"message":"172","line":63,"column":6,"nodeType":"164","endLine":63,"endColumn":29,"suggestions":"173"},{"ruleId":"145","severity":1,"message":"174","line":94,"column":9,"nodeType":"147","messageId":"148","endLine":94,"endColumn":20},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'BackSide' is defined but never used.","'useState' is defined but never used.","'PokemonContext' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useContext' is defined but never used.","'FireBaseContext' is defined but never used.","'secondPlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["177"],"React Hook useEffect has missing dependencies: 'board', 'dispatch', 'history', 'player1', 'player2', and 'winnerPlayer'. Either include them or remove the dependency array.",["178"],"'addFirstPlayerPokemons' is defined but never used.","'selectPokemonsLoading' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'pokemons'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'dispatch' and 'firstPlayer'. Either include them or remove the dependency array.",["180"],"'addFunction' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [dispatch]",{"range":"189","text":"190"},"Update the dependencies array to be: [board, dispatch, history, player1, player2, steps, winnerPlayer]",{"range":"191","text":"192"},"Update the dependencies array to be: [dispatch, pokemons]",{"range":"193","text":"194"},"Update the dependencies array to be: [dispatch, firstPlayer, stateOfChosenPokemons]",{"range":"195","text":"196"},[1833,1835],"[dispatch]",[3795,3802],"[board, dispatch, history, player1, player2, steps, winnerPlayer]",[874,876],"[dispatch, pokemons]",[1886,1909],"[dispatch, firstPlayer, stateOfChosenPokemons]"]